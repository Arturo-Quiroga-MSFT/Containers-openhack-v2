{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.2.0.0",
    "parameters": {
        "containerName": {
            "type": "string",
            "defaultValue": "teamdeploy"
        },
        "imageName": {
            "type": "string",
            "defaultValue": "containersv2.azurecr.io/openhack:5504"
        },
        "numberCpuCores": {
            "type": "string",
            "defaultValue": "1"
        },
        "memory": {
            "type": "string",
            "defaultValue": "1.5"
        },
        "restartPolicy": {
            "type": "string",
            "allowedValues": [
                "OnFailure",
                "Always",
                "Never"
            ],
            "defaultValue": "Never"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "simulatorLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "registryName": {
            "type": "secureString",
            "defaultValue": "containersv2.azurecr.io"
        },
        "imageRegistryUsername": {
            "type": "secureString",
            "defaultValue": "ad9216eb-4075-4ace-a8f6-ca43a0eeff1f"
        },
        "imageRegistryPassword": {
            "type": "secureString",
            "defaultValue": "3NjUuSE-RTW7CJE6sEg_Nat-1BtALx~K77"
        },
        "identityName": {
            "type": "string",
            "defaultValue": "deployIdentity"
        },
        "scriptRepo": {
            "type": "string",
            "defaultValue": "https://openhackpublic.blob.core.windows.net/containers/v2",
            "metadata": {
                "description": "HTTP/S public site containing shell script to run against the container"
            }
        },
        "scriptFile": {
            "type": "string",
            "defaultValue": "ohcontainer2.2.sh",
            "metadata": {
                "description": "name of the script file on the script repo to run on the container"
            }
        },
        "initCommands": {
            "type": "string",
            "metadata": {
                "description": "Commands to run on VM initially during cloud-init"
            },
            "defaultValue": "[concat('# Install Azure CLI\n','curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n','# Install Docker\n','sudo snap install docker\n','sudo snap install kubectl --classic\n','sudo snap install helm --classic\n','sudo apt -y autoremove\n')]"
        },
        "tools": {
            "type": "string",
            "defaultValue": "yo express",
            "metadata": {
                "description": "string list of packages to deploy to the container via NPM separated by spaces"
            }
        },
        "subnetName": {
            "type": "String",
            "defaultValue": "default"
        },
        "virtualNetworkName": {
            "type": "String",
            "defaultValue": "OHSCI-VNet"
        },
        "addressPrefix": {
            "type": "String",
            "defaultValue": "10.9.8.0"
        },
        "virtualMachineName": {
            "type": "String",
            "defaultValue": "OHLabVM"
        },
        "adminUsername": {
            "type": "String",
            "defaultValue": "demouser"
        },
        "adminPassword": {
            "type": "SecureString",
            "defaultValue": "demo@pass123"
        }
    },
    "variables": {
        "azureUserName": "",
        "azurePassword": "",
        "recipientEmail": "",
        "ChatConnectionString": "",
        "ChatMessageQueue": "",
        "scriptURi": "[concat(parameters('scriptRepo'),'/',parameters('scriptFile'))]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'),'-nic')]",
        "networkSecurityGroupName": "[concat(parameters('virtualMachineName'),'-nsg')]",
        "publicIpAddressName": "[concat(parameters('virtualMachineName'),'-pip')]",
        "publicDNSName": "[toLower(concat(parameters('virtualMachineName'),'-',uniqueString(subscription().id)))]",
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-04-01",
            "name": "[parameters('containerName')]",
            "location": "[parameters('location')]",
            "tags": {},
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('containerName')]",
                        "properties": {
                            "image": "[parameters('imageName')]",
                            "resources": {
                                "requests": {
                                    "cpu": "[int(parameters('numberCpuCores'))]",
                                    "memoryInGB": "[float(parameters('memory'))]"
                                }
                            },
                            "environmentVariables": [
                                {
                                    "name": "AZUREUSER",
                                    "value": "[variables('azureUserName')]"
                                },
                                {
                                    "name": "AZUREPASS",
                                    "value": "[variables('azurePassword')]"
                                },
                                {
                                    "name": "SUBID",
                                    "value": "[subscription().subscriptionId]"
                                },
                                {
                                    "name": "RGLOCATION",
                                    "value": "[parameters('location')]"
                                },
                                {
                                    "name": "SIMULATORLOCATION",
                                    "value": "[parameters('simulatorLocation')]"
                                },
                                {
                                    "name": "RECIPIENTEMAIL",
                                    "value": "[variables('recipientEmail')]"
                                },
                                {
                                    "name": "CHATCONNECTIONSTRING",
                                    "value": "[variables('ChatConnectionString')]"
                                },
                                {
                                    "name": "CHATMSGQUEUE",
                                    "value": "[variables('ChatMessageQueue')]"
                                },
                                {
                                    "name": "TOOLS",
                                    "value": "[parameters('tools')]"
                                }
                            ],
                            "command": []
                        }
                    }
                ],
                "imageRegistryCredentials": [
                    {
                        "server": "[parameters('registryName')]",
                        "username": "[parameters('imageRegistryUsername')]",
                        "password": "[parameters('imageRegistryPassword')]"
                    }
                ],
                "restartPolicy": "[parameters('restartPolicy')]",
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2018-11-30",
            "name": "[parameters('identityName')]",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2018-10-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 300,
                            "protocol": "TCP",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-09-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[concat(parameters('addressPrefix'),'/22')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[concat(parameters('addressPrefix'),'/24')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIpAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicDNSName')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[parameters('virtualMachineName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    },
                    "customData": "[base64(parameters('initCommands'))]"
                }
            },
            "resources": [
                {
                    "condition": "[not(empty(parameters('scriptFile')))]",
                    "type": "extensions",
                    "apiVersion": "2016-03-30",
                    "name": "CustomSciptExtension1",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
                    ],
                    "tags": {
                        "displayName": "ConfigureVM"
                    },
                    "properties": {
                        "publisher": "Microsoft.OSTCExtensions",
                        "type": "CustomScriptForLinux",
                        "typeHandlerVersion": "1.4",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "fileUris": [
                                "[variables('scriptURi')]"
                            ],
                            "commandToExecute": "[concat('sh ', parameters('scriptFile'))]"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "LabVM": {
            "type": "object",
            "value": {
                "SSH": "[concat(parameters('adminUsername'),'@',reference(resourceId('Microsoft.Network/publicIpAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn)]",
                "Name": "[parameters('virtualMachineName')]",
                "DNS": "[reference(resourceId('Microsoft.Network/publicIpAddresses',variables('publicIpAddressName'))).dnsSettings.fqdn]"
            }
        },
        "AdminCredential": {
            "type": "object",
            "value": {
                "Username": "[parameters('adminUsername')]",
                "Password": "[parameters('adminPassword')]"
            }
        }
    }
}